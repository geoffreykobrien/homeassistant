configure_zooz_zen77:
  alias: Configure Zooz ZEN77 Dimmer
  description: "Configures all parameters for Zooz ZEN77 dimmer switch with enhanced error handling and validation"
  icon: mdi:lightbulb-group
  fields:
    entity_id:
      description: "Entity ID of the ZEN77 dimmer"
      example: "light.bedroom_dimmer"
      required: true
      selector:
        entity:
          domain: light
    paddle_orientation:
      description: "Paddle orientation: 0=Up on/Down off, 1=Up off/Down on, 2=Up or down for on/off"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "Up for on, down for off"
              value: 0
            - label: "Up for off, down for on"
              value: 1
            - label: "Up or down for on/off"
              value: 2
    led_indicator:
      description: "LED indicator mode: 0=LED on when switch off, 1=LED on when switch on, 2=LED always off, 3=LED always on"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "LED on when switch off"
              value: 0
            - label: "LED on when switch on"
              value: 1
            - label: "LED always off"
              value: 2
            - label: "LED always on"
              value: 3
    auto_turn_off_timer:
      description: "Auto turn-off timer in minutes (0=disabled, 1-65535)"
      example: "0"
      default: 0
      selector:
        number:
          min: 0
          max: 65535
          mode: box
    auto_turn_on_timer:
      description: "Auto turn-on timer in minutes (0=disabled, 1-65535)"
      example: "0"
      default: 0
      selector:
        number:
          min: 0
          max: 65535
          mode: box
    association_reports:
      description: "Association reports trigger (0-15, see manual for details)"
      example: "15"
      default: 15
      selector:
        number:
          min: 0
          max: 15
          mode: box
    power_failure_status:
      description: "Status after power failure: 0=always off, 1=always on, 2=restore last"
      example: "2"
      default: 2
      selector:
        select:
          options:
            - label: "Always off"
              value: 0
            - label: "Always on"
              value: 1
            - label: "Restore last state"
              value: 2
    physical_ramp_rate_on:
      description: "Physical ramp rate ON in seconds (0=instant, 1-99)"
      example: "0"
      default: 0
      selector:
        number:
          min: 0
          max: 99
          mode: box
    minimum_brightness:
      description: "Minimum brightness level in percent (1-99)"
      example: "1"
      default: 1
      selector:
        number:
          min: 1
          max: 99
          mode: box
    maximum_brightness:
      description: "Maximum brightness level in percent (1-99)"
      example: "99"
      default: 99
      selector:
        number:
          min: 1
          max: 99
          mode: box
    double_tap_up:
      description: "Double tap up behavior: 0=full brightness, 1=custom brightness, 2=max brightness, 3=disabled"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "Full brightness"
              value: 0
            - label: "Custom brightness"
              value: 1
            - label: "Max brightness"
              value: 2
            - label: "Disabled"
              value: 3
    scene_control:
      description: "Scene control: 0=disabled, 1=enabled"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "Disabled"
              value: 0
            - label: "Enabled"
              value: 1
    load_control:
      description: "Load control (smart bulb mode): 0=disable paddle, 1=enable paddle and Z-Wave, 2=disable paddle and Z-Wave"
      example: "1"
      default: 1
      selector:
        select:
          options:
            - label: "Disable paddle"
              value: 0
            - label: "Enable paddle and Z-Wave"
              value: 1
            - label: "Disable paddle and Z-Wave"
              value: 2
    dimming_speed:
      description: "Dimming speed when holding paddle in seconds (1-99)"
      example: "5"
      default: 5
      selector:
        number:
          min: 1
          max: 99
          mode: box
    physical_custom_brightness:
      description: "Physical custom brightness level (0=last level, 1-99%)"
      example: "0"
      default: 0
      selector:
        number:
          min: 0
          max: 99
          mode: box
    multilevel_dimming_reports:
      description: "Multilevel dimming reports behavior (0-2)"
      example: "2"
      default: 2
      selector:
        number:
          min: 0
          max: 2
          mode: box
    disabled_load_behavior:
      description: "Disabled load behavior: 0=reports status/changes LED, 1=doesn't report"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "Reports status/changes LED"
              value: 0
            - label: "Doesn't report"
              value: 1
    night_light:
      description: "Night light brightness level (0=disabled, 1-99%)"
      example: "20"
      default: 20
      selector:
        number:
          min: 0
          max: 99
          mode: box
    led_indicator_color:
      description: "LED indicator color: 0=white, 1=blue, 2=green, 3=red"
      example: "1"
      default: 1
      selector:
        select:
          options:
            - label: "White"
              value: 0
            - label: "Blue"
              value: 1
            - label: "Green"
              value: 2
            - label: "Red"
              value: 3
    led_indicator_brightness:
      description: "LED indicator brightness: 0=bright(100%), 1=medium(60%), 2=low(30%)"
      example: "1"
      default: 1
      selector:
        select:
          options:
            - label: "Bright (100%)"
              value: 0
            - label: "Medium (60%)"
              value: 1
            - label: "Low (30%)"
              value: 2
    single_tap_up:
      description: "Single tap up behavior: 0=last brightness, 1=custom brightness, 2=max brightness, 3=full brightness"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "Last brightness"
              value: 0
            - label: "Custom brightness"
              value: 1
            - label: "Max brightness"
              value: 2
            - label: "Full brightness"
              value: 3
    disable_paddle_programming:
      description: "Disable paddle programming: 0=programming enabled, 1=programming disabled"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "Programming enabled"
              value: 0
            - label: "Programming disabled"
              value: 1
    physical_ramp_rate_off:
      description: "Physical ramp rate OFF in seconds (0=instant, 1-99)"
      example: "2"
      default: 2
      selector:
        number:
          min: 0
          max: 99
          mode: box
    zwave_ramp_rate_on:
      description: "Z-Wave ramp rate ON in seconds (0=instant, 1-99, 255=match physical)"
      example: "255"
      default: 255
      selector:
        number:
          min: 0
          max: 255
          mode: box
    zwave_ramp_rate_off:
      description: "Z-Wave ramp rate OFF in seconds (0=instant, 1-99, 255=match physical)"
      example: "255"
      default: 255
      selector:
        number:
          min: 0
          max: 255
          mode: box
    remote_zwave_dimming_duration:
      description: "Remote Z-Wave dimming duration in seconds (1-99)"
      example: "5"
      default: 5
      selector:
        number:
          min: 1
          max: 99
          mode: box
    disable_led_flash_on_change:
      description: "Disable LED flash on setting change: 0=flash enabled, 1=flash disabled"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "Flash enabled"
              value: 0
            - label: "Flash disabled"
              value: 1
    on_off_switch_mode:
      description: "On/Off switch mode: 0=dimmer mode, 1=switch mode"
      example: "0"
      default: 0
      selector:
        select:
          options:
            - label: "Dimmer mode"
              value: 0
            - label: "Switch mode"
              value: 1
    basic_set_custom_brightness:
      description: "Basic Set custom brightness (0=last level, 1-99%)"
      example: "0"
      default: 0
      selector:
        number:
          min: 0
          max: 99
          mode: box
    send_notification:
      description: "Send notification when configuration is complete"
      default: true
      selector:
        boolean:
    notification_service:
      description: "Notification service to use (leave blank for persistent notification)"
      example: "notify.mobile_app_phone"
      default: ""
      selector:
        text:
    inter_parameter_delay:
      description: "Delay between parameter configurations in seconds"
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 5.0
          step: 0.1
          mode: box
  variables:
    device_name: "{{ state_attr(entity_id, 'friendly_name') or entity_id }}"
    config_timestamp: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
    parameter_count: 29
  mode: single
  sequence:
    # Validate entity exists and is available
    - condition: template
      value_template: "{{ states(entity_id) not in ['unavailable', 'unknown'] }}"
      alias: "Check if entity is available"
      
    # Input validation
    - condition: template
      value_template: "{{ minimum_brightness < maximum_brightness }}"
      alias: "Validate min brightness < max brightness"
      error: "Minimum brightness must be less than maximum brightness"
    
    # Log configuration start with device info
    - service: system_log.write
      data:
        message: "Starting ZEN77 configuration for {{ device_name }} ({{ entity_id }}) at {{ config_timestamp }}"
        level: info
    
    # Create a list of all parameters for tracking
    - variables:
        parameters:
          - { param: 1, name: "Paddle Orientation", value: "{{ paddle_orientation }}" }
          - { param: 2, name: "LED Indicator", value: "{{ led_indicator }}" }
          - { param: 3, name: "Auto Turn-Off Timer", value: "{{ auto_turn_off_timer }}" }
          - { param: 5, name: "Auto Turn-On Timer", value: "{{ auto_turn_on_timer }}" }
          - { param: 7, name: "Association Reports", value: "{{ association_reports }}" }
          - { param: 8, name: "Power Failure Status", value: "{{ power_failure_status }}" }
          - { param: 9, name: "Physical Ramp Rate ON", value: "{{ physical_ramp_rate_on }}" }
          - { param: 10, name: "Minimum Brightness", value: "{{ minimum_brightness }}" }
          - { param: 11, name: "Maximum Brightness", value: "{{ maximum_brightness }}" }
          - { param: 12, name: "Double Tap Up", value: "{{ double_tap_up }}" }
          - { param: 13, name: "Scene Control", value: "{{ scene_control }}" }
          - { param: 15, name: "Load Control", value: "{{ load_control }}" }
          - { param: 16, name: "Dimming Speed", value: "{{ dimming_speed }}" }
          - { param: 18, name: "Physical Custom Brightness", value: "{{ physical_custom_brightness }}" }
          - { param: 20, name: "Multilevel Dimming Reports", value: "{{ multilevel_dimming_reports }}" }
          - { param: 21, name: "Disabled Load Behavior", value: "{{ disabled_load_behavior }}" }
          - { param: 22, name: "Night Light", value: "{{ night_light }}" }
          - { param: 23, name: "LED Indicator Color", value: "{{ led_indicator_color }}" }
          - { param: 24, name: "LED Indicator Brightness", value: "{{ led_indicator_brightness }}" }
          - { param: 25, name: "Single Tap Up", value: "{{ single_tap_up }}" }
          - { param: 26, name: "Disable Paddle Programming", value: "{{ disable_paddle_programming }}" }
          - { param: 27, name: "Physical Ramp Rate OFF", value: "{{ physical_ramp_rate_off }}" }
          - { param: 28, name: "Z-Wave Ramp Rate ON", value: "{{ zwave_ramp_rate_on }}" }
          - { param: 29, name: "Z-Wave Ramp Rate OFF", value: "{{ zwave_ramp_rate_off }}" }
          - { param: 30, name: "Remote Z-Wave Dimming Duration", value: "{{ remote_zwave_dimming_duration }}" }
          - { param: 32, name: "Disable LED Flash", value: "{{ disable_led_flash_on_change }}" }
          - { param: 33, name: "On/Off Switch Mode", value: "{{ on_off_switch_mode }}" }
          - { param: 34, name: "Basic Set Custom Brightness", value: "{{ basic_set_custom_brightness }}" }
        failed_parameters: []
        successful_parameters: []
    
    # Configure all parameters with error handling
    - repeat:
        for_each: "{{ parameters }}"
        sequence:
          - alias: "Set parameter {{ repeat.item.param }}"
            try:
              - service: zwave_js.set_config_parameter
                data:
                  entity_id: "{{ entity_id }}"
                  parameter: "{{ repeat.item.param }}"
                  value: "{{ repeat.item.value }}"
              - service: system_log.write
                data:
                  message: "✓ Parameter {{ repeat.item.param }} ({{ repeat.item.name }}) set to {{ repeat.item.value }}"
                  level: debug
              - variables:
                  successful_parameters: "{{ successful_parameters + [repeat.item] }}"
            rescue:
              - service: system_log.write
                data:
                  message: "✗ Failed to set parameter {{ repeat.item.param }} ({{ repeat.item.name }}) to {{ repeat.item.value }}: {{ rescue_error }}"
                  level: warning
              - variables:
                  failed_parameters: "{{ failed_parameters + [repeat.item] }}"
          
          # Delay between parameters
          - delay: "{{ inter_parameter_delay }}"
    
    # Final status logging
    - service: system_log.write
      data:
        message: >
          ZEN77 configuration completed for {{ device_name }}:
          ✓ Successful: {{ successful_parameters | length }}/{{ parameter_count }}
          ✗ Failed: {{ failed_parameters | length }}/{{ parameter_count }}
          {% if failed_parameters | length > 0 %}
          Failed parameters: {{ failed_parameters | map(attribute='name') | join(', ') }}
          {% endif %}
        level: "{{ 'info' if failed_parameters | length == 0 else 'warning' }}"
    
    # Send notification if requested
    - condition: template
      value_template: "{{ send_notification }}"
      alias: "Check if notification should be sent"
    
    - choose:
        # Use custom notification service if specified
        - conditions:
            - condition: template
              value_template: "{{ notification_service != '' }}"
          sequence:
            - service: "{{ notification_service }}"
              data:
                title: "ZEN77 Configuration {{ 'Complete' if failed_parameters | length == 0 else 'Completed with Errors' }}"
                message: >
                  {{ device_name }} configuration finished.
                  ✓ {{ successful_parameters | length }}/{{ parameter_count }} parameters configured successfully.
                  {% if failed_parameters | length > 0 %}
                  ⚠️ {{ failed_parameters | length }} parameters failed.
                  {% endif %}
      # Default to persistent notification
      default:
        - service: persistent_notification.create
          data:
            title: "ZEN77 Configuration {{ 'Complete' if failed_parameters | length == 0 else 'Completed with Errors' }}"
            message: >
              {{ device_name }} configuration finished at {{ config_timestamp }}.
              
              ✓ Successfully configured: {{ successful_parameters | length }}/{{ parameter_count }} parameters
              {% if failed_parameters | length > 0 %}
              
              ⚠️ Failed parameters ({{ failed_parameters | length }}):
              {% for param in failed_parameters %}
              • {{ param.name }} (Parameter {{ param.param }})
              {% endfor %}
              
              Check the Home Assistant logs for more details.
              {% endif %}
            notification_id: "zen77_config_{{ entity_id | replace('.', '_') }}_{{ config_timestamp | replace(' ', '_') | replace(':', '') | replace('-', '') }}"
